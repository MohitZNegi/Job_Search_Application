@using X.PagedList;
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core;
@using System.Linq;
@using System.Web;


@model IPagedList<Job_Search_Application.Models.Jobs_Model>;
@{
    ViewData["Title"] = "Published Job";
}

<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Dosis:wght@300&display=swap" rel="stylesheet">
</head>
<style>



</style>
<body>
<br />
<br />
<span class="userId" style="display:none;">@ViewBag.CurrentUser</span>
    <div class="container shadow" style="background:linear-gradient(to bottom, #007bff, white); border-radius: 10px; margin-top: 20px;">

        
    <br />
    <div class="col-md-9 ">
        <form class="d-flex">
            <input class="form-control me-sm-2" type="search" name="searchTerm" placeholder="Job title, part-time...">
            <button class="btn btn-secondary my-2 my-sm-0" type="submit" style="display: flex; align-items: center;">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16" style="margin-right: 8px;">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                </svg>
                Search
            </button>
        </form>
    </div>
    <br />

    <h3>Your listings</h3>
    <br />

    <br />
</body>



    @foreach (var item in Model)
    {

        <div class="row d-flex justify-content-center">
            <div class="col-md-10 shadow" style="background-color: white; border-radius:20px;">
                <br />
                <div class="card-header">
                <p>Posted @CalculateDaysAgo(item.PublishDate)</p>
                    <h5> <a href="/Job/JobsApplication/@item.Jobs_Id">@item.Title</a></h5>
                    <h6 class="text-capitalize fw-bold bi bi-building">@item.Employer.Company_Name</h6>
                </div>
                <div class="card-body">
                    <p class="text-capitalize bi bi-geo-alt">@item.Job_Location</p>
                    <p class="text-capitalize d-inline bi bi-clock">@item.Job_Schedule</p>
                    <p class="text-capitalize bi bi-pencil-square">@item.Job_Type</p>
                    <p class="text-capitalize bi bi-box2"> @item.Classification</p>
                    <p class="text-capitalize bi bi-cash">@item.Salary</p>
                </div>

                <div class="card-footer">

                    <p class="text-muted" style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis; max-width:150rem;"> @item.Job_Details</p>

                </div>
                <br />
            </div>

        </div>
        <br />




    }

    <br />
    <br />
</div>



    <div class="pagination">
        { @Html.PagedListPager(Model, page => Url.Action("JobsFeed", new { page })) }
    </div>

    @functions {
        public string CalculateDaysAgo(DateTime? publishDate)
        {
            if (publishDate.HasValue)
            {
                DateTime currentDate = DateTime.Now;
                TimeSpan timeSincePublish = currentDate - publishDate.Value;
                int daysAgo = (int)timeSincePublish.TotalDays;



                if (daysAgo == 0)
                {
                    return "Today";
                }
                else if (daysAgo == 1)
                {
                    return "Yesterday";
                }
                else if (daysAgo < 7)
                {
                    return $"{daysAgo} days ago";
                }
                else if (daysAgo < 30)
                {
                    int weeksAgo = daysAgo / 7;
                    return $"{weeksAgo} weeks ago";
                }
                else
                {
                    int monthsAgo = daysAgo / 30;
                    return $"{monthsAgo} months ago";
                }
            }





            // Return a default value or throw an exception depending on your requirements
            return "Unknown";
        }
        }
    }
