@model IEnumerable<Job_Search_Application.Models.JobRequest_Model>

@{
    ViewBag.Title = "AllRequests";
}
<br />
@{
    Html.RenderPartial("_EmployerNavPartial2");
} 
<br />
<h3>Applicants</h3>
<div class="btn-group" role="group" aria-label="Button group with nested dropdown">
    <select id="selectJob" class="form-select" aria-label="Select job">
        <option selected disabled>Select a job</option>
        @foreach (var job in ViewBag.PublishedJobs)
        {
            <option value="/Employer/All_Requests?jobApplication=@job.Title">@job.Title</option>
        }
    </select>
</div>

<br />
<div class="allRequests">
    @if (Model.Count() == 0)
    {
        <div class="container mt-5">
            <div class="alert alert-info">There are no requests for jobs.</div>
        </div>
    }
    else
    {
        <div class="container">
            <br />
            <div class="requests-count">
                There are <strong>@Model.Count()</strong> requests.
            </div>
         
            <table class ="table table-striped table-borderless shadow-lg rounded-3" style="text-align:center; background-color:rgb(128, 204, 255);">
                <thead>
                    <tr>
                        <th>Employee Name</th>
                        <th>Applied Job</th>
                        <th>Status</th>
                        <th>View Profile</th>
                    </tr>
                </thead>
                <tbody id="jobRequestTable">
                    @foreach (var item in Model)
                    {
                        <tr class="job-request-row" data-job="@item.Job.Title">
                            <td class="text-capitalize">@item.Employee.First_name @item.Employee.Last_name</td>
                            
                            <td>@item.Job.Title</td>
                            <td>
                                @{
                                    string status = string.Empty;
                                    if (item.Request_Status == "pending")
                                    {
                                        status = "Awaiting Review";
                                    }
                                    else if (item.Request_Status == "accepted" && item.InterviewRequest_Status == "pending")
                                    {
                                        status = "Reviewed Accepted";
                                    }
                                    else if (item.Request_Status == "rejected" && item.InterviewRequest_Status == "pending")
                                    {
                                        status = "Reviewed Rejected";
                                    }
                                        else if (item.Request_Status == "accepted" && item.InterviewRequest_Status == "accepted")
                                    {
                                        status = "Reviewed interview pending";
                                    }
                                     else if (item.Request_Status == "rejected" && item.InterviewRequest_Status == "canceled")
                                    {
                                        status = "Reviewed Declined";
                                    }
                                        else if (item.Request_Status == "accepted" && item.InterviewRequest_Status == "declined")
                                    {
                                        status = "Reviewed Withdrawn";
                                    }
                                        else if (item.Request_Status == "accepted" && item.InterviewRequest_Status == "interviewed")
                                    {
                                        status = "Interviewed";
                                    }
                                        else if (item.Request_Status == "rejected" && item.InterviewRequest_Status == "interviewed")
                                    {
                                        status = "Rejected";
                                    }
                                        else if (item.Request_Status == "accepted" && item.InterviewRequest_Status == "hired")
                                    {
                                        status = "Hired";
                                    }
                                }
                                @status <br />
                                <p class=" text-muted" style="font-size:smaller;">Applied on @item.Applied_Date.Value.ToShortDateString()</p>
                            </td>

                            <td>
                                @Html.ActionLink("View Profile", "GetEmployee_Profile", "Employer",
                        new { id = item.EmployeeId, requestID = item.JobRequest_Id },
                        new { @class = "btn btn-primary" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<script>
    $(document).ready(function () {
        $('.job-application').on('click', function () {
            var selectedJob = $(this).data('job');
            filterJobRequests(selectedJob);
        });
    });

    function filterJobRequests(selectedJob) {
        if (selectedJob) {
            $('.job-request-row').hide();
            $('.job-request-row[data-job="' + selectedJob + '"]').show();
        } else {
            $('.job-request-row').show();
        }
    }
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#selectJob').on('change', function () {
            var selectedValue = $(this).val();
            if (selectedValue) {
                window.location.href = selectedValue;
            }
        });

    });

</script>