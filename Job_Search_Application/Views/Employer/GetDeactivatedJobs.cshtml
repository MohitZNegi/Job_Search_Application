@using X.PagedList;
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core;
@using System.Linq;
@using System.Web;
@using X.PagedList.Web.Common;


@model IPagedList<Job_Search_Application.Models.Jobs_Model>;
@{
    ViewData["Title"] = "Published Job";
}
<br />
@{
    Html.RenderPartial("_EmployerNavPartial2");
}

<br />



<span class="userId" style="display:none;">@ViewBag.CurrentUser</span>


    <br />

    <h3>Your listings</h3>
    <br />
        <div class="col-md-9">
    <form class="d-flex">
        <input class="form-control me-sm-2" type="search" name="searchTerm" placeholder="Job title, location...">
        <button role="button" class="button-29" type="submit">
            <img src="~/resources/websitefiles/WorkWize__Logo2.png" style=" max-width:30px;" />
            Search
        </button>
    </form>
</div>
<br />
    @{
        Html.RenderPartial("_EmployerJobNavPartial");
    }

    @if (Model.Any())
    {
        <table class="table table-striped table-borderless shadow-lg rounded-3" style="text-align:center; background-color:rgb(128, 204, 255);">
            <thead>
                <tr>
                    <th>Job Title</th>
                    <th>Job Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {

                    <tr>
                        <td>
                            <a style="color:aliceblue" class="job-application" data-job="@item.Title" href="/Employer/All_Requests?jobApplication=@item.Title">@item.Title</a>
                            <br /><p class="text-muted">@item.Job_Location</p>

                        </td>
                        <td>
                            Deactivated
                        </td>
                        <td>
                            <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                                <div class="btn-group" role="group">
                                    <select class="form-select" aria-label="Select action" onchange="handleActionSelect(this)">
                                        <option selected disabled>Action</option>
                                        <option value="@Url.Action("EditJobs", new { id = item.Jobs_Id })">Edit</option>
                                    </select>
                                </div>
                            </div>
                        </td>


                    </tr>
                }
            </tbody>
        </table>
   <div class="row">
        <div class="col-md-12">

            <div id="paginationContainer" class="pagination bootswatch-flatly justify-content-center">
                @Html.PagedListPager(Model,
            page => Url.Action("GetDeactivatedJobs", new { page }),
            new PagedListRenderOptions
            {
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            ActiveLiElementClass = "active",
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            MaximumPageNumbersToDisplay = 5,
            LinkToFirstPageFormat = "&laquo;",
            LinkToPreviousPageFormat = "&lt;",
            LinkToNextPageFormat = "&gt;",
            LinkToLastPageFormat = "&raquo;"
            })
            </div>
            
     
    </div>
    </div>
    }
    else
    {  <div class="card" style="background-color:rgb(128, 204, 255)">
    <div class="card-body">
        <p>No deactivated jobs present.</p>
        </div>
        </div>
    }

    <br />
    <br />




<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function handleActionSelect(select) {
        var selectedValue = select.value;
        if (selectedValue) {
            window.location.href = selectedValue;
        }
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var paginationContainer = document.querySelector(".pagination.bootswatch-flatly");
        var paginationLinks = paginationContainer.getElementsByTagName("a");
        var activePage = paginationContainer.querySelector(".pagination > .active");

        // Add custom CSS classes to the pagination links
        for (var i = 0; i < paginationLinks.length; i++) {
            paginationLinks[i].classList.add("page-link");
            paginationLinks[i].style.backgroundColor = "#f8f9fa";  // Light blue color
            paginationLinks[i].style.color = "#212529";  // White color
        }

        // Add custom CSS classes to the active page
        activePage.classList.add("page-item");
        activePage.firstChild.classList.add("page-link");
        activePage.firstChild.style.backgroundColor = "#007bff";  // Blue color
        activePage.firstChild.style.color = "#fff";  // White color
    });
</script>

